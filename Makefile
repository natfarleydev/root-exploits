# The strength of a makefile is that it only compiles the objects that need to.
# This means that we can work on separate files, and then just makefile it when
# we need to!

CC=g++

# Both of these are based on `fltk-config --cxxflags` and 
# `fltk-config --use-images --ldflags` respectively. + -g for good luck (debug)
 CFLAGS=`root-config --cflags`
LDFLAGS=`root-config --glibs --libs` # Have both glibs and libs for good measure

# Put a list of all the files we want here. It doesn't matter what order (I think).
# *ONLY* include cpp files, header files are included if they're mentioned in 
# the cpp file.                                                                                                                                                   
SOURCES=final_fit.cxx

# This line essentially says, take the list of SOURCES, and put an '.o' on the
# end instead of '.cxx'.
OBJECTS=$(SOURCES:.cxx=.o)

# This is the name of the executable.
EXECUTABLE=finalfit

# These two instructions are essentially, build (the OBJECTS one) the project, 
# and stick it together (the EXECUTABLE one). DO NOT MODIFY, any problems are 
# likely with the program, not with this.
#
# Based on http://mrbook.org/tutorials/make/

$(EXECUTABLE): $(OBJECTS)
	$(CC) -o $(EXECUTABLE) $(OBJECTS) $(LDFLAGS)

$(OBJECTS): $(SOURCES)
	$(CC) $(CFLAGS) -c $(SOURCES)
