
// TODO prepare the rest of this file for actually compiling!
#include <iostream>
#include "TString.h"
#include "Riostream.h"
#include "TH2.h"
#include "TNtuple.h"
#include "TF1.h"
#include "TMath.h"



Double_t fitf(Double_t *x, Double_t *par)
{
  // A simple function to create c*(x^n)
  return par[0]*TMath::Power(x[0],par[1]);
}

Double_t fitLambertW(Double_t *x, Double_t *par) {
  return 0;
}

void final_fit();

// int main for this program.
int main() {

  final_fit();
  
  return 0;
}


void final_fit() {
  //  Read data from an ascii file and create a root file with an histogram and an ntuple.

  // Not sure why this bit is here, but I see it a lot in examples
  // And then I took it out because I'm compiling it and this really doesn't seem to have a point now; TODO input all the files I need to.
  // TString dir = gSystem->UnixPathName(gInterpreter->GetCurrentMacroName());
  // dir.ReplaceAll("final_fit.cxx","");
  // dir.ReplaceAll("/./","/");
  // ifstream in;
  // in.open(Form("%sfirst_proper_run.dat",dir.Data()));

  ifstream in;
  in.open("first_proper_run.dat");

  // Declaring variables
  Float_t x,y;
  Int_t nlines = 0; // for a while loop a little below here
  TH2F *h2 = new TH2F("h2","xy scatter",1000,1E10,1E16,1000,3E-2,150 ); // Define histogram, inc. axes
  TNtuple *ntuple = new TNtuple("ntuple","data from ascii file",				"x:y");

  // Loop to read the file, and print out the first 5 values to check if it's the right file.
  while (1) {
    in >> x >> y;
    if (!in.good()) break;
    if (nlines < 5) printf("x=%8f, y=%8f\n",x,y);
    h2->Fill(x,y);
    ntuple->Fill(x,y);
    nlines++;
  }
  printf(" found %d points\n",nlines);

  in.close();

  // Draw the Histogram
  h2->Draw();
	   
  // Creates a Root function based on function fitf above
  TF1 *func = new TF1("fitf",fitf,1E9,1E13,2);
  TF1 *func2 = new TF1("fitf",fitf,5E12,3E14,2);

  // Sets initial values (guesses)
  func->SetParameters(0.5,0); 
  func2->SetParameters(0.5,0.5);

  // Fit histogram in range defined by function
  h2->Fit(func,"r");
  h2->Fit(func2,"r+");

  // TODO apparently gPad doesn't appear when you compile it yourself :(
  // // Set log scales on the current gPad
  // gPad->SetLogx(1);
  // gPad->SetLogy(1);

}
